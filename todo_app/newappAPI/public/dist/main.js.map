{"version":3,"sources":["./src/app/addtable/addtable.component.ts","./src/app/addtable/addtable.component.html","./src/environments/environment.ts","./src/app/update-record/updateuser.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/addtable/tabledata.service.ts","./src/app/update-record/update-record.component.ts","./src/app/update-record/update-record.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoE;;;;;;;ICI5D,0EAA8G;IAAA,kFAAuB;IAAA,4DAAM;;;IAK3I,0EAA4G;IAAA,kFAAuB;IAAA,4DAAM;;;IAKzI,0EAAsG;IAAA,kFAAuB;IAAA,4DAAM;;;IAKnI,0EAA0G;IAAA,kFAAuB;IAAA,4DAAM;;;IAKvI,0EAAkG;IAAA,kFAAuB;IAAA,4DAAM;;;IAWjI,0EAAwG;IAAA,kFAAuB;IAAA,4DAAM;;;IAWvI,0EAA6E;IAC3E,uDACF;IAAA,4DAAM;;;IADJ,0DACF;IADE,8FACF;;;;IAjDJ,yEAA0C;IACtC,0EAAwD;IAAvB,wTAAsB;IACvD,yEAAwB;IACpB,2EAAoC;IAAA,yEAAQ;IAAA,qEAAU;IAAA,4DAAS;IAAA,4DAAQ;IACvE,sEAAwG;IACxG,mHAA2I;IAC/I,4DAAM;IACN,yEAAwB;IACpB,2EAAoC;IAAA,0EAAQ;IAAA,qEAAS;IAAA,4DAAS;IAAA,4DAAQ;IACtE,uEAAsG;IACtG,qHAAyI;IAC7I,4DAAM;IACN,0EAAwB;IACpB,4EAAoC;IAAA,0EAAQ;IAAA,kEAAM;IAAA,4DAAS;IAAA,4DAAQ;IACnE,wEAAiG;IACjG,qHAAmI;IACvI,4DAAM;IACN,0EAAwB;IACpB,6EAAoC;IAAA,0EAAQ;IAAA,mEAAO;IAAA,4DAAS;IAAA,4DAAQ;IACpE,wEAA+G;IAC/G,qHAAuI;IAC3I,4DAAM;IACN,0EAAwB;IACpB,6EAAoC;IAAA,0EAAQ;IAAA,yEAAa;IAAA,4DAAS;IAAA,4DAAQ;IAC1E,wEAA4F;IAC5F,qHAA+H;IACnI,4DAAM;IACN,0EAAwB;IACtB,6EAA0B;IAAA,0EAAQ;IAAA,mEAAO;IAAA,4DAAS;IAAA,4DAAQ;IAAA,yEAC5D;IAAA,2EAA0C;IACxC,wEAA0G;IAC1G,6EAA0C;IAAA,0EAAQ;IAAA,gEAAI;IAAA,4DAAS;IAAA,4DAAQ;IACzE,4DAAM;IACN,2EAA0C;IACxC,wEAA4G;IAC5G,6EAA0C;IAAA,0EAAQ;IAAA,kEAAM;IAAA,4DAAS;IAAA,4DAAQ;IACzE,qHAAqI;IACvI,4DAAM;IACR,4DAAM;IACJ,0EAAwB;IACpB,8EAA6F;IAAA,uEAAW;IAAA,4DAAS;IACjH,iEAAI;IAAA,iEAAI;IACR,8EAAgE;IAAtB,yTAAqB;IAAC,wEAAY;IAAA,4DAAS;IACrF,iEAAI;IAAA,iEAAI;IAEZ,4DAAM;IACN,4DAAO;IACP,sHAEM;IACR,4DAAM;;;IAjDE,0DAA0B;IAA1B,0FAA0B;IAItB,0DAAwF;IAAxF,kKAAwF;IAKxF,0DAAsF;IAAtF,gKAAsF;IAKtF,0DAAgF;IAAhF,0JAAgF;IAKhF,0DAAoF;IAApF,8JAAoF;IAKpF,0DAA4E;IAA5E,sJAA4E;IAW9E,2DAAkF;IAAlF,4JAAkF;IAI3B,0DAAiC;IAAjC,iGAAiC;IAOzC,0DAAoB;IAApB,uFAAoB;;;;IAwBjE,qEAAkC;IAChC,yEAAgB;IAAA,uDAAW;IAAA,4DAAK;IAChC,qEAAI;IAAA,uDAAmB;IAAA,4DAAK;IAC5B,qEAAI;IAAA,uDAAkB;IAAA,4DAAK;IAC3B,qEAAI;IAAA,uDAAgB;IAAA,4DAAK;IACzB,qEAAI;IAAA,wDAAe;IAAA,4DAAK;IACxB,sEAAI;IAAA,wDAAc;IAAA,4DAAK;IACvB,sEAAI;IAAA,wDAAsB;IAAA,4DAAK;IAC/B,sEAAI;IAAA,8EAAyE;IAAnD,4WAA6B;IAAsB,kEAAM;IAAA,4DAAS;IAAA,4DAAK;IACnG,4DAAK;;;IARa,0DAAW;IAAX,4EAAW;IACvB,0DAAmB;IAAnB,oFAAmB;IACnB,0DAAkB;IAAlB,mFAAkB;IAClB,0DAAgB;IAAhB,iFAAgB;IAChB,0DAAe;IAAf,gFAAe;IACf,0DAAc;IAAd,+EAAc;IACd,0DAAsB;IAAtB,uFAAsB;;;IAMtC,0EAAsE;IACpE,uDACF;IAAA,4DAAM;;;IADJ,0DACF;IADE,iGACF;;;;;IAhCJ,yEAAyC;IACrC,yEAA8B;IAAA,0EAAe;IAAA,4DAAK;IAClD,0EAAuC;IACnC,4EAAqB;IACjB,4EAA0B;IACxB,qEAAI;IACF,yEAAgB;IAAA,+DAAI;IAAA,4DAAK;IACzB,yEAAgB;IAAA,qEAAS;IAAA,4DAAK;IAC9B,0EAAgB;IAAA,oEAAQ;IAAA,4DAAK;IAC7B,0EAAgB;IAAA,mEAAO;IAAA,4DAAK;IAC5B,0EAAgB;IAAA,kEAAM;IAAA,4DAAK;IAC3B,0EAAgB;IAAA,iEAAK;IAAA,4DAAK;IAC1B,0EAAgB;IAAA,+DAAG;IAAA,4DAAK;IACxB,0EAAgB;IAAA,kEAAM;IAAA,4DAAK;IAC7B,4DAAK;IACP,4DAAQ;IACR,yEAAO;IACL,qHASK;IACP,4DAAQ;IACV,4DAAQ;IACd,4DAAM;IACN,sHAEM;IACN,iEAAI;IACJ,8EAA2E;IAArB,wTAAoB;IAAC,oEAAQ;IAAA,4DAAS;IAC5F,8EAA8E;IAAA,4EAAgB;IAAA,4DAAS;IAE3G,4DAAM;;;IApB6B,2DAAW;IAAX,oFAAW;IAaU,0DAAgB;IAAhB,mFAAgB;IAKjB,0DAA0B;IAA1B,6IAA0B;;ADjF1E,MAAM,iBAAiB;IAE5B,YAAoB,WAAwB,EAAQ,WAA4B;QAA5D,gBAAW,GAAX,WAAW,CAAa;QAAQ,gBAAW,GAAX,WAAW,CAAiB;QAChF,aAAQ,GAAK,EAAE,CAAC;QAOhB,iBAAY,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACpC,SAAS,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACpC,QAAQ,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACnC,KAAK,EAAC,CAAC,EAAE,EAAC,yDAAU,CAAC,QAAQ,CAAC;YAC9B,OAAO,EAAC,CAAC,EAAE,EAAC,yDAAU,CAAC,QAAQ,CAAC;YAChC,GAAG,EAAC,CAAC,EAAE,EAAC,yDAAU,CAAC,QAAQ,CAAC;YAC5B,MAAM,EAAC,CAAC,EAAE,EAAC,yDAAU,CAAC,QAAQ,CAAC;SAChC,CAAC,CAAC;QAEH,cAAS,GAAC,KAAK,CAAC;QAehB,mBAAc,GAAS,KAAK,CAAC;QAiB9B,eAAU,GAAC,KAAK,CAAC;IAjDoE,CAAC;IAGrF,QAAQ;QACN,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC,SAAS,CAClC,IAAI,GAAE,GAAC,IAAI,CAAC,QAAQ,GAAC,IAAI,CAAC,EAAC,CAC5B;IACH,CAAC;IAWD,SAAS;QACP,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC,SAAS,CAClC,IAAI,GAAE,GAAC,IAAI,CAAC,QAAQ,GAAC,IAAI,CAAC,EAAC,CAC5B;QACD,IAAI,CAAC,SAAS,GAAC,IAAI,CAAC;IACtB,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,SAAS,GAAC,KAAK,CAAC;QACrB,IAAI,CAAC,WAAW,GAAC,EAAE,CAAC;IAEtB,CAAC;IAID,OAAO;QACL,IAAI,IAAI,GAAC,EAAC,YAAY,EAAC,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,SAAS,CAAC,KAAK;YACtD,WAAW,EAAC,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK;YACrD,SAAS,EAAC,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,OAAO,CAAC,KAAK;YAClD,QAAQ,EAAC,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK;YAChD,OAAO,EAAC,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK;YAC9C,eAAe,EAAC,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,GAAG,CAAC,KAAK,EAAC;QAChE,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,SAAS,CACtC,IAAI,GAAE;YAAC,IAAI,CAAC,WAAW,GAAC,IAAI,CAAC,QAAQ,CAAC;YACtC,IAAI,CAAC,cAAc,GAAC,IAAI,CAAC;YACzB,UAAU,CAAC,GAAE,EAAE,GAAC,IAAI,CAAC,cAAc,GAAC,KAAK,GAAC,EAAC,IAAI,CAAC,CAAC;YACjD,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC;QAAA,CAAC,CAC5B;IACH,CAAC;IAID,UAAU,CAAC,EAAM;QACf,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,SAAS,CACvC,IAAI,GAAE;YAAC,IAAI,CAAC,aAAa,GAAC,IAAI,CAAC,OAAO,CAAC;YACrC,IAAI,CAAC,UAAU,GAAC,IAAI,CAAC;YACrB,UAAU,CAAC,GAAE,EAAE,GAAC,IAAI,CAAC,UAAU,GAAC,KAAK,GAAC,EAAC,IAAI,CAAC,CAAC;YAC/C,IAAI,CAAC,SAAS,EAAE,CAAC;QAAA,CAAC,CACnB,CAAC;IACN,CAAC;;kFA3DY,iBAAiB;iGAAjB,iBAAiB;QCR9B,8GAkDQ;QAIR,8GAqCM;;QA3FkB,gFAAgB;QAsDhB,0DAAe;QAAf,+EAAe;;;;;;;;;;;;;;ACtDvC;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAO,MAAM,IAAI;IAGb,YAAY,IAAW,EAAC,KAAY;QAChC,IAAI,CAAC,IAAI,GAAC,IAAI,CAAC;QACf,IAAI,CAAC,KAAK,GAAC,KAAK,CAAC;IACrB,CAAC;CAEJ;;;;;;;;;;;;;;;;;;;;;ACDM,MAAM,YAAY;IALzB;QAME,UAAK,GAAC,cAAc,CAAC;KAEtB;;wEAHY,YAAY;4FAAZ,YAAY;QCNzB,yEAAwC;QACtC,0EAA2B;QAAA,0EAAe;QAAA,4DAAO;QACnD,4DAAM;QACN,yEAAuB;QACtB,qEAAI;QAAA,uDAAS;QAAA,4DAAK;QACnB,4DAAM;QACN,gEAAI;QACH,sEAAK;QAEL,2EAA+B;QAChC,4DAAM;;QAND,0DAAS;QAAT,0EAAS;;;;;;;;;;;;;;ACJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACO;AACT;AACT;AACQ;AACW;AACV;AACwB;;AAqBzE,MAAM,SAAS;;kEAAT,SAAS;wFAAT,SAAS,cAFR,2DAAY;6FADb,EAAE,YAVJ;YACP,uEAAa;YACb,oEAAgB;YAChB,oEAAS;YACT,kEAAmB;YACnB,qEAAgB;YAChB,0DAAW;SAGZ;mIAIU,SAAS,mBAjBlB,2DAAY;QACZ,8EAAiB;QACjB,4FAAqB,aAGrB,uEAAa;QACb,oEAAgB;QAChB,oEAAS;QACT,kEAAmB;QACnB,qEAAgB;QAChB,0DAAW;;;;;;;;;;;;;;;;;;;ACfR,MAAM,gBAAgB;IAE3B,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAEpC,QAAG,GAAC,aAAa;QACjB,SAAI,GAAC,gBAAgB;QACrB,SAAI,GAAC,gBAAgB;QACrB,SAAI,GAAC,gBAAgB;IALkB,CAAC;IAMxC,OAAO;QACL,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,IAAI,CAAC,GAAG,CAAC;IACrC,CAAC;IACD,OAAO,CAAC,IAAQ;QACd,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAM,IAAI,CAAC,IAAI,EAAC,IAAI,CAAC;IAC5C,CAAC;IAED,UAAU,CAAC,EAAM;QACf,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAM,IAAI,CAAC,IAAI,GAAC,EAAE,CAAC;IAC5C,CAAC;IAED,UAAU,CAAC,EAAM,EAAC,IAAQ;QACxB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,IAAI,CAAC,IAAI,GAAC,EAAE,EAAC,IAAI,CAAC;IAC9C,CAAC;;gFArBU,gBAAgB;mGAAhB,gBAAgB,WAAhB,gBAAgB,mBAFf,MAAM;;;;;;;;;;;;;ACHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkC;;;;;;;ICE3B,6EAAoD;IAAA,uDAAW;IAAA,4DAAS;;;IAAxC,wFAAmB;IAAC,0DAAW;IAAX,2EAAW;;;IAoBlE,0EAA4E;IACxE,uDACF;IAAA,4DAAM;;;IADJ,0DACF;IADE,gGACF;;;ADlBC,MAAM,qBAAqB;IAEhC,YAAoB,SAA0B;QAA1B,cAAS,GAAT,SAAS,CAAiB;QAQ9C,SAAI,GAAC,EAAE,CAAC;QACR,QAAG,GAAC,EAAE,CAAC;QACP,eAAU,GAAC,EAAE,CAAC;QACd,kBAAa,GAAC,EAAE;IAXmC,CAAC;IAGpD,QAAQ;QACN,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC,SAAS,CAChC,IAAI,GAAE,KAAI,CAAC,EAAE,GAAC,IAAI,CACnB;IACH,CAAC;IAKD,UAAU;QACR,IAAI,IAAI,GAAC,IAAI,gDAAI,CAAC,IAAI,CAAC,IAAI,EAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAC7C,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,EAAC,IAAI,CAAC,CAAC,SAAS,CAChD,IAAI,GAAE;YAAC,IAAI,CAAC,aAAa,GAAC,IAAI,CAAC,OAAO,CAAC;YACrC,UAAU,CAAC,GAAE,EAAE,GAAC,IAAI,CAAC,aAAa,GAAC,EAAE,GAAC,EAAC,IAAI,CAAC;gBAC5C,IAAI,CAAC,GAAG,GAAC,EAAE,CAAC;YACZ,IAAI,CAAC,UAAU,GAAC,EAAE;gBAClB,IAAI,CAAC,IAAI,GAAC,EAAE;QACd,CAAC,EACD,KAAK,GAAE,QAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAC1B;IACH,CAAC;;0FAzBU,qBAAqB;qGAArB,qBAAqB;QCRlC,yEAAuB;QACnB,sEAAK;QACD,2EAAwC;QAAA,uFAA4B;QAAA,4DAAQ;QAC5E,4EAAwE;QAAlB,uLAAiB;QAAC,qEACzE;QAAA,uHAAwE;QAC3E,4DAAS;QACT,4DAAM;QAAA,gEAAI;QAAA,gEAAI;QACd,sEAAK;QACD,4EAAwC;QAAA,4FAAgC;QAAA,4DAAQ;QAChF,6EAA0E;QAAxC,yLAAkB;QAAsB,2EAC1E;QAAA,6EAA2B;QAAA,sEAAU;QAAA,4DAAS;QAC9C,6EAA0B;QAAA,qEAAS;QAAA,4DAAS;QAC5C,6EAAsB;QAAA,iEAAK;QAAA,4DAAS;QACpC,6EAAwB;QAAA,mEAAO;QAAA,4DAAS;QAC5C,4DAAS;QACT,4DAAM;QAAA,iEAAI;QAAA,iEAAI;QACd,uEAAK;QACD,6EAAiC;QAAC,wDAA2C;QAAA,4DAAQ;QAAA,+EACrF;QAAA,6EAA4G;QAAzB,8LAAwB;QAA3G,4DAA4G;QAChH,4DAAM;QAAA,iEAAI;QAAA,iEAAI;QACd,8EAAoE;QAAA,wEAAY;QAAA,4DAAS;QACzF,8EAAyE;QAAvB,8IAAS,gBAAY,IAAC;QAAC,kEAAM;QAAA,4DAAS;QAC5F,4DAAM;QAAA,iEAAI;QAAA,iEAAI;QACd,0EAAuB;QACnB,oHAEQ;QAEZ,4DAAM;;QAzBwD,0DAAiB;QAAjB,4EAAiB;QAC/C,0DAAK;QAAL,2EAAK;QAKK,0DAAkB;QAAlB,6EAAkB;QAQlB,2DAA2C;QAA3C,4HAA2C;QACrC,0DAA0C;QAA1C,yHAA0C;QAAC,mFAAwB;QAEhE,0DAAoB;QAApB,6IAAoB;QAIZ,0DAAmB;QAAnB,mFAAmB;;;;;;;;;;;;;;ACvB9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuD;AACW;AACc;;;AAEhF,MAAM,MAAM,GAAW;IACrB,EAAC,IAAI,EAAC,EAAE,EAAC,UAAU,EAAC,GAAG,EAAC,SAAS,EAAC,MAAM,EAAC;IACzC,EAAC,IAAI,EAAC,EAAE,EAAC,SAAS,EAAC,8EAAiB,EAAC;IACrC,EAAC,IAAI,EAAC,QAAQ,EAAC,SAAS,EAAC,4FAAqB,EAAC;CAChD,CAAC;AAMK,MAAM,gBAAgB;;gFAAhB,gBAAgB;+FAAhB,gBAAgB;mGAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAC7B,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;;;;;;;;;;;;;;;;;;;ACbuB;AAGF;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;ACXpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { TabledataService } from './tabledata.service';\n@Component({\n  selector: 'app-addtable',\n  templateUrl: './addtable.component.html',\n  styleUrls: ['./addtable.component.css']\n})\nexport class AddtableComponent implements OnInit {\n\n  constructor(private formBuilder: FormBuilder,public dataservice:TabledataService) { }\n  formData:any=[];\n\n  ngOnInit(): void {\n    this.dataservice.getData().subscribe(\n      data=>{this.formData=data;}\n    )\n  }\n  registerForm = this.formBuilder.group({\n    firstName: ['', Validators.required],\n    lastName: ['', Validators.required],\n    email:['',Validators.required],\n    contact:['',Validators.required],\n    DOB:['',Validators.required],\n    gender:['',Validators.required]\n  });\n\n  showtable=false;\n  showTable(){\n    this.dataservice.getData().subscribe(\n      data=>{this.formData=data;}\n    )\n    this.showtable=true;  \n  }\n\n  showForm(){\n    this.showtable=false;\n    this.usermessage=\"\";\n    \n  }\n\n  usermessage:any;\n  successmessage:boolean=false;\n  adduser(){\n    let body={\"first_name\":this.registerForm.controls.firstName.value,\n               \"last_name\":this.registerForm.controls.lastName.value,\n               \"contact\":this.registerForm.controls.contact.value,\n               \"gender\":this.registerForm.controls.gender.value,\n               \"email\":this.registerForm.controls.email.value,\n               \"date_of_birth\":this.registerForm.controls.DOB.value}\n    this.dataservice.addUser(body).subscribe(\n      data=>{this.usermessage=data.meassage;\n      this.successmessage=true;\n      setTimeout(()=>{this.successmessage=false},3000);\n      this.registerForm.reset();}\n    )\n  }\n\n  deleteMessage:any\n deletetime=false;\n  deleteitem(id:any){\n    this.dataservice.deleteUser(id).subscribe(\n      data=>{this.deleteMessage=data.message;\n        this.deletetime=true;\n        setTimeout(()=>{this.deletetime=false},3000);\n      this.showTable();}\n    );\n}\n  \n  \n\n\n}\n","<div class=\"container\" *ngIf=\"!showtable\">\n    <form [formGroup]=\"registerForm\" (ngSubmit)=\"adduser()\">\n    <div class=\"form-group\">\n        <label for=\"id1\" class=\"form-label\"><strong>First Name</strong></label>\n        <input type=\"text\" class=\"form-control\" placeholder=\"Enter your first name\" formControlName=\"firstName\">\n        <div *ngIf=\"registerForm.controls.firstName.invalid && registerForm.controls.firstName.touched\" class=\"error\">*This field is required</div>\n    </div>\n    <div class=\"form-group\">\n        <label for=\"id2\" class=\"form-label\"><strong>Last Name</strong></label>\n        <input type=\"text\" class=\"form-control\" placeholder=\"Enter your last name\" formControlName=\"lastName\">\n        <div *ngIf=\"registerForm.controls.lastName.invalid && registerForm.controls.lastName.touched\" class=\"error\">*This field is required</div>\n    </div>\n    <div class=\"form-group\">\n        <label for=\"id3\" class=\"form-label\"><strong>E-Mail</strong></label>\n        <input type=\"email\" class=\"form-control\" placeholder=\"Enter your email\"  formControlName=\"email\">\n        <div *ngIf=\"registerForm.controls.email.invalid && registerForm.controls.email.touched\" class=\"error\">*This field is required</div>\n    </div>\n    <div class=\"form-group\">\n        <label for=\"id4\" class=\"form-label\"><strong>Contact</strong></label>\n        <input type=\"text\" class=\"form-control\" placeholder=\"Enter your contact 1234567890\"  formControlName=\"contact\">\n        <div *ngIf=\"registerForm.controls.contact.invalid && registerForm.controls.contact.touched\" class=\"error\">*This field is required</div>\n    </div>\n    <div class=\"form-group\">\n        <label for=\"id5\" class=\"form-label\"><strong>Date Of Birth</strong></label>\n        <input type=\"date\" class=\"form-control\" placeholder=\"Enter your DOB\"  formControlName=\"DOB\">\n        <div *ngIf=\"registerForm.controls.DOB.invalid && registerForm.controls.DOB.touched\" class=\"error\">*This field is required</div>\n    </div>\n    <div class=\"form-group\">\n      <label class=\"form-label\"><strong>Gender:</strong></label>&nbsp;&nbsp;\n    <div class=\"form-check form-check-inline\">\n      <input class=\"form-check-input\" type=\"radio\" name=\"gender\" id=\"id6\" value=\"male\" formControlName=\"gender\">\n      <label class=\"form-check-label\" for=\"id6\"><strong>Male</strong></label>\n    </div>\n    <div class=\"form-check form-check-inline\">\n      <input class=\"form-check-input\" type=\"radio\" name=\"gender\" id=\"id7\" value=\"female\" formControlName=\"gender\">\n      <label class=\"form-check-label\" for=\"id7\"><strong>Female</strong></label>\n      <div *ngIf=\"registerForm.controls.gender.invalid && registerForm.controls.gender.touched\" class=\"error\">*This field is required</div>\n    </div>\n  </div>\n    <div class=\"form-group\">\n        <button type=\"submit\" class=\"btn btn-primary form-control\" [disabled]=\"registerForm.invalid\">Add details</button>\n        <br><br>\n        <button class=\"btn btn-dark form-control\" (click)=\"showTable()\">Show details</button>\n        <br><br>\n        \n    </div>\n    </form>\n    <div class=\"alert alert-success message\" role=\"alert\" *ngIf=\"successmessage\">\n      {{this.usermessage}}\n    </div>\n  </div>\n  \n\n\n<div class=\"container\" *ngIf=\"showtable\">\n    <h1 class=\"display-3 heading\">Details of User</h1>\n    <div class=\"card1 col-md-10 col-sm-12\">\n        <table class=\"table\">\n            <thead class=\"thead-dark\">\n              <tr>\n                <th scope=\"col\">S.No</th>\n                <th scope=\"col\">FirstName</th>\n                <th scope=\"col\">LastName</th>\n                <th scope=\"col\">Contact</th>\n                <th scope=\"col\">Gender</th>\n                <th scope=\"col\">Email</th>\n                <th scope=\"col\">DOB</th>\n                <th scope=\"col\">Action</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr *ngFor=\"let data of formData\">\n                <th scope=\"row\">{{data.id}}</th>\n                <td>{{data.first_name}}</td>\n                <td>{{data.last_name}}</td>\n                <td>{{data.contact}}</td>\n                <td>{{data.gender}}</td>\n                <td>{{data.email}}</td>\n                <td>{{data.date_of_birth}}</td>\n                <td><button type=\"submit\" (click)=\"deleteitem(data.id)\" class=\"btn btn-dark\">DELETE</button></td>\n              </tr>\n            </tbody>\n          </table>\n    </div>\n    <div class=\"alert alert-dark message\" role=\"alert\" *ngIf=\"deletetime\">\n      {{deleteMessage}}\n    </div>\n    <br>\n    <button  class=\"btn btn-primary col-md-2 offset-md-2\" (click)=\"showForm()\">Add user</button>\n    <button  class=\"btn btn-dark col-md-2 offset-md-2\" [routerLink]='[\"/update\"]'>Update User Info</button>\n\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","export class User{\r\n    name:string;\r\n    value:string;\r\n    constructor(name:string,value:string){\r\n        this.name=name;\r\n        this.value=value;\r\n    }\r\n    \r\n}","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title=\"My First App\";\n  \n}\n","\n<nav class=\"navbar navbar-dark bg-dark\">\n  <span class=\"navbar-brand\">Add Profile App</span>\n</nav>\n<div class=\"container\">\n <h1>{{title}}</h1>\n</div>\n<br>\n <div>\n <!-- <app-addtable></app-addtable> -->\n <router-outlet></router-outlet>\n</div>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport {ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { AddtableComponent } from './addtable/addtable.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { UpdateRecordComponent } from './update-record/update-record.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AddtableComponent,\n    UpdateRecordComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    NgbModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    FormsModule\n    \n  \n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TabledataService {\n\n  constructor(private http :HttpClient) {}\n\n  url=\"/myapp/home\"\n  url1=\"/myapp/addUser\"\n  url2=\"/myapp/modify/\"\n  url3=\"/myapp/delete/\"\n  getData():Observable<any>{\n    return this.http.get<any>(this.url)\n  }\n  addUser(body:any):Observable<any>{\n    return this.http.post<any>(this.url1,body)\n  }\n\n  deleteUser(id:any):Observable<any>{\n    return this.http.delete<any>(this.url3+id)\n  }\n\n  updateUser(id:any,body:any):Observable<any>{\n    return this.http.put<any>(this.url2+id,body)\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { TabledataService } from '../addtable/tabledata.service';\nimport {User} from './updateuser';\n@Component({\n  selector: 'app-update-record',\n  templateUrl: './update-record.component.html',\n  styleUrls: ['./update-record.component.css']\n})\nexport class UpdateRecordComponent implements OnInit {\n\n  constructor(private tabledata:TabledataService ) { }\n\n  id:any;\n  ngOnInit(): void {\n    this.tabledata.getData().subscribe(\n      data=>this.id=data\n    )\n  }\n  name=\"\";\n  ids=\"\";\n  inputvalue=\"\";\n  updatemessage=\"\"\n  updateinfo(){\n    let body=new User(this.name,this.inputvalue);\n    this.tabledata.updateUser(this.ids,body).subscribe(\n      data=>{this.updatemessage=data.message;\n        setTimeout(()=>{this.updatemessage=\"\"},3000),\n        this.ids=\"\";\n        this.inputvalue=\"\",\n        this.name=\"\"\n      },\n      error=>console.log(error)\n    )\n  }\n  \n  \n\n\n}\n","<div class=\"container\">\n    <div>\n        <label for=\"select1\" class=\"form-label\">Select the Id to be updated:</label>\n        <select name=\"ids\" id=\"select1\"  class=\"form-control\" [(ngModel)]=\"ids\">select id\n       <option *ngFor=\"let data of id\" value=\"{{data.id}}\">{{data.id}}</option>\n    </select>\n    </div><br><br>\n    <div>\n        <label for=\"select2\" class=\"form-label\">SELECT THE OPTIONS TO BE UPDATED</label>\n        <select name=\"colum\" id=\"select2\" [(ngModel)]=\"name\" class='form-control'>select options\n        <option value=\"first_name\">first_name</option>\n        <option value=\"last_name\">last_name</option>\n        <option value=\"email\">email</option>\n        <option value=\"contact\">contact</option>\n    </select>\n    </div><br><br>\n    <div>\n        <label for=\"\" class=\"form-label\"> Enter the value of {{name}} for id :{{ids}}</label>&nbsp;&nbsp;&nbsp;\n        <input type=\"text\" class=\"form-control\" placeholder=\"Enter the value for {{name}}\" [(ngModel)]=\"inputvalue\">\n    </div><br><br>\n    <button class=\"btn btn-dark col-md-3 offset-2\" [routerLink]='[\"/\"]'>Back to Home</button>\n    <button class=\"btn btn-success col-md-2 offset-2\" (click)=\"updateinfo()\">Update</button>\n</div><br><br>\n<div class=\"container\">\n    <div class=\"alert alert-primary message\" role=\"alert\" *ngIf=\"updatemessage\">\n        {{updatemessage}}\n      </div>\n\n</div>\n\n\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AddtableComponent } from './addtable/addtable.component';\nimport { UpdateRecordComponent } from './update-record/update-record.component';\n\nconst routes: Routes = [\n  {path:'',redirectTo:'/',pathMatch:'full'},\n  {path:'',component:AddtableComponent},\n  {path:\"update\",component:UpdateRecordComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}